#include <iostream>
#include<cmath>
#include <fstream>

using namespace std;

// Definition of Schedule class
class Schedule {
    // class parameters to be calculated
    int periodNumber;
    double openingBalance;
    double principal;
    float interestRate;
    double installment;
    double closingBalance;
};

// present value is substructed from the opening value for each period
double PMT(double r, double PMT, double temp, double PV, double n) {
    temp=(pow((1+r), n))-1; // temp OK
    PMT= PV*(r+(r/temp));
    return PMT;
}

int main(int argc, char *argv[]) {
    double r=0.04, PV=500000, n=40;
    int frequency=3;
    int openingMonth=04, openingYear=2019;
    int lBound=0, lBoundMonth=1,uBoundMonth=12;


    
    double openingBalance = PV;
    double principal = PV/n;
    double periodicInterestRate = r/(12/frequency);
    double interest = openingBalance*periodicInterestRate;
    double installment = principal+interest;
    double closingBalance = openingBalance-principal;
    
    // variables holding current month and year values (at each row)
    int tempMonth = openingMonth;
    int tempYear = openingYear;


char listSeparator=';';
ofstream csvFile;
csvFile.open("output.csv");



//for (int j=1;j<9;j++)
//{
csvFile << "Case 1:" << listSeparator << "Fixed principal interest payments and fixed interest rate" << listSeparator << "" << listSeparator << "" << listSeparator << ""<< listSeparator << "" << listSeparator << "" << listSeparator << "" << endl;
//}

    csvFile << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << endl;
    csvFile << "input" << listSeparator << "PV"<<listSeparator << PV << endl;
    csvFile << "" << listSeparator << "frequency" << listSeparator << frequency << endl;
    csvFile << "" << listSeparator << "# of periods" << listSeparator << n << endl;
    csvFile << "" << listSeparator << "interest rate" << listSeparator << r << endl;
    csvFile << "" << listSeparator << "start month" << listSeparator << openingMonth << endl;
    csvFile << "" << listSeparator << ""<< listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << listSeparator << "" << endl;


    csvFile << "PN" << listSeparator << "Date" << listSeparator << "OB" << listSeparator << "Princ" << listSeparator<< "r" << listSeparator << "inter" << listSeparator << "install" << listSeparator << "CB" << endl;
    for (int i = 1; i <= n; i++) {
        csvFile << i << listSeparator << tempMonth << "/" << tempYear << listSeparator << openingBalance << listSeparator << principal << listSeparator << periodicInterestRate << listSeparator << interest << listSeparator << installment << listSeparator << closingBalance << endl;
        // temporary month value to be recalculated after each iteration
        // at each iteration increase month value by frequency
        tempMonth += frequency;
        // if the end of year
        if (tempMonth > 12) {
            // reset month value to january
            tempMonth = 1;
            // increase year
            tempYear++;
        }
        openingBalance = closingBalance;
        interest = openingBalance*periodicInterestRate;
        installment = principal+interest;
        closingBalance = openingBalance-principal;




    }

    csvFile.close();
    cout << "File saved!" << endl;

    return 0;
}
